{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport shopActionsTypes from \"./shop.types\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  console.log(\"Fetching Collections\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n  } catch (e) {\n    put(fetchCollectionsFailure(e.message));\n  } //   return dispatch => {\n  //     const collectionRef = firestore.collection(\"collections\");\n  //     dispatch(fetchCollectionsStart());\n  //     collectionRef\n  //       .get()\n  //       .then(snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap));\n  //       })\n  //       .catch(e => dispatch(fetchCollectionsFailure(e.message)));\n  //   };\n\n}\nexport function* onFetchingCollectionsStart() {\n  yield takeEvery(shopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nfunction* shopSagas() {\n  yield all([call(onFetchingCollectionsStart)]);\n}\n\nexport default shopSagas;","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/redux/shop/shop.sagas.js"],"names":["all","call","put","takeEvery","shopActionsTypes","fetchCollectionsFailure","fetchCollectionsSuccess","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","e","message","onFetchingCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACVd,IAAAA,GAAG,CAACG,uBAAuB,CAACW,CAAC,CAACC,OAAH,CAAxB,CAAH;AACD,GAPsC,CASvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMf,SAAS,CACbC,gBAAgB,CAACe,uBADJ,EAEbV,qBAFa,CAAf;AAID;;AAED,UAAUW,SAAV,GAAsB;AACpB,QAAMpB,GAAG,CAAC,CAACC,IAAI,CAACiB,0BAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeE,SAAf","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport shopActionsTypes from \"./shop.types\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess\n} from \"./shop.actions\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nexport function* fetchCollectionsAsync() {\n  console.log(\"Fetching Collections\");\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n  } catch (e) {\n    put(fetchCollectionsFailure(e.message));\n  }\n\n  //   return dispatch => {\n  //     const collectionRef = firestore.collection(\"collections\");\n  //     dispatch(fetchCollectionsStart());\n  //     collectionRef\n  //       .get()\n  //       .then(snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap));\n  //       })\n  //       .catch(e => dispatch(fetchCollectionsFailure(e.message)));\n  //   };\n}\n\nexport function* onFetchingCollectionsStart() {\n  yield takeEvery(\n    shopActionsTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nfunction* shopSagas() {\n  yield all([call(onFetchingCollectionsStart)]);\n}\n\nexport default shopSagas;\n"]},"metadata":{},"sourceType":"module"}