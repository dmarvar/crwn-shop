{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    console.log(\"hey\");\n    const unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      console.log(collectionsMap);\n    });\n    return unsubscribeFromSnapshot();\n  });\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","updateCollections","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","match","collectionRef","collection","console","log","unsubscribeFromSnapshot","onSnapshot","snapshot","collectionsMap","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASN,EAAAA;AAAT,CAAD,KAAkC;AACjDH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,uBAAuB,GAAGJ,aAAa,CAACK,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzE,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAb,MAAAA,iBAAiB,CAACc,cAAD,CAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,cAAZ;AACD,KAJ+B,CAAhC;AAKA,WAAOH,uBAAuB,EAA9B;AACD,GATQ,CAAT;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEL,KAAK,CAACS,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEd,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACS,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEb,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAjBD;;AAmBA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,iBAAiB,EAAEkB,WAAW,IAAID,QAAQ,CAACjB,iBAAiB,CAACkB,WAAD,CAAlB;AADJ,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCX,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nconst ShopPage = ({ match, updateCollections }) => {\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    console.log(\"hey\");\n    const unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      console.log(collectionsMap);\n    });\n    return unsubscribeFromSnapshot();\n  });\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}