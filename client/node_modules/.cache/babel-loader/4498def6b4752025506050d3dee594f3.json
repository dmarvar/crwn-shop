{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n\n    const getCollections = () => {\n      return collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        setIsLoading(false);\n      });\n    };\n\n    getCollections();\n    return getCollections();\n  });\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionsPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","Route","connect","updateCollections","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isLoading","setIsLoading","collectionRef","collection","getCollections","onSnapshot","snapshot","collectionsMap","path","props","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAST,EAAAA;AAAT,CAAD,KAAkC;AACjD,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;;AACA,UAAMC,cAAc,GAAG,MAAM;AAC3B,aAAOF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAChD,cAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAhB,QAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJM,CAAP;AAKD,KAND;;AAOAG,IAAAA,cAAc;AACd,WAAOA,cAAc,EAArB;AACD,GAXQ,CAAT;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEL,KAAK,CAACS,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAET;AAA3C,OAA0DS,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAEC,KAAK,IACX,oBAAC,0BAAD;AAA4B,MAAA,SAAS,EAAET;AAAvC,OAAsDS,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CA/BD;;AAiCA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,iBAAiB,EAAEsB,WAAW,IAAID,QAAQ,CAACrB,iBAAiB,CAACsB,WAAD,CAAlB;AADJ,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, updateCollections }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    const getCollections = () => {\n      return collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        setIsLoading(false);\n      });\n    };\n    getCollections();\n    return getCollections();\n  });\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        render={props => (\n          <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={props => (\n          <CollectionsPageWithSpinner isLoading={isLoading} {...props} />\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}