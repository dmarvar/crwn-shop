{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/components/sign-in/sign-in.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signInWithGoogleStart, signInWithEmailStart } from \"../../redux/user/user.action\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport \"./sign-in.styles.scss\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signInWithEmail\n      } = this.props;\n      signInWithEmail(this.state);\n      console.log(this.state); // try {\n      //   await auth.signInWithEmailAndPassword(email, password);\n      //   this.setState({ email: \"\", password: \"\" });\n      // } catch (error) {\n      //   console.log(error);\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const {\n      signInWithGoogle\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", \"Google Sign in\", \" \"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signInWithGoogle: () => dispatch(signInWithGoogleStart()),\n  signInWithEmail: emailAndPassword => dispatch(signInWithEmailStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","signInWithGoogleStart","signInWithEmailStart","auth","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","signInWithEmail","state","console","log","handleChange","value","name","target","setState","email","password","render","signInWithGoogle","mapDispatchToProps","dispatch","emailAndPassword"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {\n  signInWithGoogleStart,\n  signInWithEmailStart\n} from \"../../redux/user/user.action\";\nimport { auth } from \"../../firebase/firebase.utils\";\n\nimport \"./sign-in.styles.scss\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { signInWithEmail } = this.props;\n    signInWithEmail(this.state);\n    console.log(this.state);\n    // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: \"\", password: \"\" });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  handleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { signInWithGoogle } = this.props;\n    return (\n      <div className=\"sign-in\">\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label=\"email\"\n            required\n          />\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\"> Sign in </CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={signInWithGoogle}\n              isGoogleSignIn\n            >\n              {\" \"}\n              Google Sign in{\" \"}\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signInWithGoogle: () => dispatch(signInWithGoogleStart()),\n  signInWithEmail: emailAndPassword =>\n    dispatch(signInWithEmailStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}