{"ast":null,"code":"import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess } from \"./user.action\";\n\nfunction* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\n\nfunction* googleSignInStart() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\n\nfunction* emailSignInStart({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\n\nfunction* signUpStart({\n  payload: data\n}) {\n  yield console.log(data);\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(data.email, data.password);\n    yield call(createUserProfileDocument, user, {\n      displayName: data.displayName\n    });\n  } catch (e) {\n    yield put(UserActionTypes.SIGN_UP_FAILURE(e));\n  } // try {\n  //   const { user } = yield auth.createUserWithEmailAndPassword(\n  //     data.email,\n  //     data.password\n  //   );\n  //   yield createUserProfileDocument(user, { displayName: data.displayName });\n  // } catch (e) {\n  //   yield put(signInFailure(e.message));\n  // }\n\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n\nfunction* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpStart);\n}\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignInStart);\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nfunction* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignUpStart), call(onCheckUserSession), call(onSignOutStart)]);\n}\n\nexport default userSaga;","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/redux/user/user.sagas.js"],"names":["all","call","takeLatest","put","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInFailure","signInSuccess","signOutFailure","signOutSuccess","getSnapshotFromUserAuth","user","userRef","userSnapshot","get","id","data","e","message","googleSignInStart","signInWithPopup","emailSignInStart","payload","email","password","signInWithEmailAndPassword","signUpStart","console","log","createUserWithEmailAndPassword","displayName","SIGN_UP_FAILURE","signOut","isUserAuthenticated","userAuth","onSignUpStart","SIGN_UP_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSaga"],"mappings":"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","sourcesContent":["import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess\n} from \"./user.action\";\n\nfunction* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\n\nfunction* googleSignInStart() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\nfunction* emailSignInStart({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(signInFailure(e.message));\n  }\n}\n\nfunction* signUpStart({ payload: data }) {\n  yield console.log(data);\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(\n      data.email,\n      data.password\n    );\n    yield call(createUserProfileDocument, user, {\n      displayName: data.displayName\n    });\n  } catch (e) {\n    yield put(UserActionTypes.SIGN_UP_FAILURE(e));\n  }\n  // try {\n  //   const { user } = yield auth.createUserWithEmailAndPassword(\n  //     data.email,\n  //     data.password\n  //   );\n  //   yield createUserProfileDocument(user, { displayName: data.displayName });\n  // } catch (e) {\n  //   yield put(signInFailure(e.message));\n  // }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (e) {\n    yield put(signInFailure(e));\n  }\n}\n\nfunction* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpStart);\n}\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, emailSignInStart);\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nfunction* userSaga() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onSignUpStart),\n    call(onCheckUserSession),\n    call(onSignOutStart)\n  ]);\n}\n\nexport default userSaga;\n"]},"metadata":{},"sourceType":"module"}