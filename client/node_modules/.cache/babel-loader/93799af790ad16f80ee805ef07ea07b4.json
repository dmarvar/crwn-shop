{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n\n    const getCollections = () => {\n      return collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        setIsLoading(false);\n      });\n    };\n\n    getCollections();\n    return getCollections();\n  });\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","Route","connect","updateCollections","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","ShopPage","match","isLoading","setIsLoading","collectionRef","collection","getCollections","onSnapshot","snapshot","collectionsMap","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,KAAkC;AACjD,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;;AACA,UAAMC,cAAc,GAAG,MAAM;AAC3B,aAAOF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAChD,cAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAd,QAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJM,CAAP;AAKD,KAND;;AAOAG,IAAAA,cAAc;AACd,WAAOA,cAAc,EAArB;AACD,GAXQ,CAAT;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEL,KAAK,CAACS,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEf,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACS,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEd,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CApBD;;AAsBA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAEmB,WAAW,IAAID,QAAQ,CAAClB,iBAAiB,CAACmB,WAAD,CAAlB;AADJ,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCX,QAAlC,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nconst ShopPage = ({ match, updateCollections }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    const getCollections = () => {\n      return collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        setIsLoading(false);\n      });\n    };\n    getCollections();\n    return getCollections();\n  });\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}