{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.action\"; // import { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpUser\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (userCredentials.password !== userCredentials.confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpUser(userCredentials);\n    setUserCredentials({\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    setUserCredentials({ ...userCredentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: userCredentials.displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: userCredentials.email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: userCredentials.password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: userCredentials.confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sign up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpUser: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/macbookprosolido/Documents/05_Programacion/ecommerce-store/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","signUpUser","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.action\";\n// import { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpUser }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (userCredentials.password !== userCredentials.confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    signUpUser(userCredentials);\n    setUserCredentials({\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    });\n  };\n  const handleChange = e => {\n    setUserCredentials({ ...userCredentials, [e.target.name]: e.target.value });\n  };\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={userCredentials.displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={userCredentials.email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={userCredentials.password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={userCredentials.confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">Sign up</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpUser: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}